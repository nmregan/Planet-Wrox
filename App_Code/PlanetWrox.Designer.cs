//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PlanetWroxModel", "FK_TReviews_TGenres", "TGenres", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PlanetWroxModel.TGenre), "TReviews", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PlanetWroxModel.TReview), true)]
[assembly: EdmRelationshipAttribute("PlanetWroxModel", "FK_TPictures_TPhotoAlbums", "TPhotoAlbum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PlanetWroxModel.TPhotoAlbum), "TPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PlanetWroxModel.TPicture), true)]

#endregion

namespace PlanetWroxModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PlanetWroxEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PlanetWroxEntities object using the connection string found in the 'PlanetWroxEntities' section of the application configuration file.
        /// </summary>
        public PlanetWroxEntities() : base("name=PlanetWroxEntities", "PlanetWroxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PlanetWroxEntities object.
        /// </summary>
        public PlanetWroxEntities(string connectionString) : base(connectionString, "PlanetWroxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PlanetWroxEntities object.
        /// </summary>
        public PlanetWroxEntities(EntityConnection connection) : base(connection, "PlanetWroxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TGenre> TGenres
        {
            get
            {
                if ((_TGenres == null))
                {
                    _TGenres = base.CreateObjectSet<TGenre>("TGenres");
                }
                return _TGenres;
            }
        }
        private ObjectSet<TGenre> _TGenres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TReview> TReviews
        {
            get
            {
                if ((_TReviews == null))
                {
                    _TReviews = base.CreateObjectSet<TReview>("TReviews");
                }
                return _TReviews;
            }
        }
        private ObjectSet<TReview> _TReviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TPhotoAlbum> TPhotoAlbums
        {
            get
            {
                if ((_TPhotoAlbums == null))
                {
                    _TPhotoAlbums = base.CreateObjectSet<TPhotoAlbum>("TPhotoAlbums");
                }
                return _TPhotoAlbums;
            }
        }
        private ObjectSet<TPhotoAlbum> _TPhotoAlbums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TPicture> TPictures
        {
            get
            {
                if ((_TPictures == null))
                {
                    _TPictures = base.CreateObjectSet<TPicture>("TPictures");
                }
                return _TPictures;
            }
        }
        private ObjectSet<TPicture> _TPictures;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TGenres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTGenres(TGenre tGenre)
        {
            base.AddObject("TGenres", tGenre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TReviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTReviews(TReview tReview)
        {
            base.AddObject("TReviews", tReview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TPhotoAlbums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTPhotoAlbums(TPhotoAlbum tPhotoAlbum)
        {
            base.AddObject("TPhotoAlbums", tPhotoAlbum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TPictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTPictures(TPicture tPicture)
        {
            base.AddObject("TPictures", tPicture);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlanetWroxModel", Name="TGenre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TGenre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TGenre object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="strName">Initial value of the strName property.</param>
        /// <param name="intSortOrder">Initial value of the intSortOrder property.</param>
        public static TGenre CreateTGenre(global::System.Int32 id, global::System.String strName, global::System.Int32 intSortOrder)
        {
            TGenre tGenre = new TGenre();
            tGenre.ID = id;
            tGenre.strName = strName;
            tGenre.intSortOrder = intSortOrder;
            return tGenre;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String strName
        {
            get
            {
                return _strName;
            }
            set
            {
                OnstrNameChanging(value);
                ReportPropertyChanging("strName");
                _strName = StructuralObject.SetValidValue(value, false, "strName");
                ReportPropertyChanged("strName");
                OnstrNameChanged();
            }
        }
        private global::System.String _strName;
        partial void OnstrNameChanging(global::System.String value);
        partial void OnstrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 intSortOrder
        {
            get
            {
                return _intSortOrder;
            }
            set
            {
                OnintSortOrderChanging(value);
                ReportPropertyChanging("intSortOrder");
                _intSortOrder = StructuralObject.SetValidValue(value, "intSortOrder");
                ReportPropertyChanged("intSortOrder");
                OnintSortOrderChanged();
            }
        }
        private global::System.Int32 _intSortOrder;
        partial void OnintSortOrderChanging(global::System.Int32 value);
        partial void OnintSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PlanetWroxModel", "FK_TReviews_TGenres", "TReviews")]
        public EntityCollection<TReview> TReviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TReview>("PlanetWroxModel.FK_TReviews_TGenres", "TReviews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TReview>("PlanetWroxModel.FK_TReviews_TGenres", "TReviews", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlanetWroxModel", Name="TPhotoAlbum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TPhotoAlbum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TPhotoAlbum object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static TPhotoAlbum CreateTPhotoAlbum(global::System.Int32 id)
        {
            TPhotoAlbum tPhotoAlbum = new TPhotoAlbum();
            tPhotoAlbum.ID = id;
            return tPhotoAlbum;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String strName
        {
            get
            {
                return _strName;
            }
            set
            {
                OnstrNameChanging(value);
                ReportPropertyChanging("strName");
                _strName = StructuralObject.SetValidValue(value, true, "strName");
                ReportPropertyChanged("strName");
                OnstrNameChanged();
            }
        }
        private global::System.String _strName;
        partial void OnstrNameChanging(global::System.String value);
        partial void OnstrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String strUserName
        {
            get
            {
                return _strUserName;
            }
            set
            {
                OnstrUserNameChanging(value);
                ReportPropertyChanging("strUserName");
                _strUserName = StructuralObject.SetValidValue(value, true, "strUserName");
                ReportPropertyChanged("strUserName");
                OnstrUserNameChanged();
            }
        }
        private global::System.String _strUserName;
        partial void OnstrUserNameChanging(global::System.String value);
        partial void OnstrUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PlanetWroxModel", "FK_TPictures_TPhotoAlbums", "TPicture")]
        public EntityCollection<TPicture> TPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TPicture>("PlanetWroxModel.FK_TPictures_TPhotoAlbums", "TPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TPicture>("PlanetWroxModel.FK_TPictures_TPhotoAlbums", "TPicture", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlanetWroxModel", Name="TPicture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TPicture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TPicture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="strDescription">Initial value of the strDescription property.</param>
        /// <param name="strToolTip">Initial value of the strToolTip property.</param>
        /// <param name="strImageUrl">Initial value of the strImageUrl property.</param>
        /// <param name="intPhotoAlbumID">Initial value of the intPhotoAlbumID property.</param>
        public static TPicture CreateTPicture(global::System.Int32 id, global::System.String strDescription, global::System.String strToolTip, global::System.String strImageUrl, global::System.Int32 intPhotoAlbumID)
        {
            TPicture tPicture = new TPicture();
            tPicture.ID = id;
            tPicture.strDescription = strDescription;
            tPicture.strToolTip = strToolTip;
            tPicture.strImageUrl = strImageUrl;
            tPicture.intPhotoAlbumID = intPhotoAlbumID;
            return tPicture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String strDescription
        {
            get
            {
                return _strDescription;
            }
            set
            {
                OnstrDescriptionChanging(value);
                ReportPropertyChanging("strDescription");
                _strDescription = StructuralObject.SetValidValue(value, false, "strDescription");
                ReportPropertyChanged("strDescription");
                OnstrDescriptionChanged();
            }
        }
        private global::System.String _strDescription;
        partial void OnstrDescriptionChanging(global::System.String value);
        partial void OnstrDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String strToolTip
        {
            get
            {
                return _strToolTip;
            }
            set
            {
                OnstrToolTipChanging(value);
                ReportPropertyChanging("strToolTip");
                _strToolTip = StructuralObject.SetValidValue(value, false, "strToolTip");
                ReportPropertyChanged("strToolTip");
                OnstrToolTipChanged();
            }
        }
        private global::System.String _strToolTip;
        partial void OnstrToolTipChanging(global::System.String value);
        partial void OnstrToolTipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String strImageUrl
        {
            get
            {
                return _strImageUrl;
            }
            set
            {
                OnstrImageUrlChanging(value);
                ReportPropertyChanging("strImageUrl");
                _strImageUrl = StructuralObject.SetValidValue(value, false, "strImageUrl");
                ReportPropertyChanged("strImageUrl");
                OnstrImageUrlChanged();
            }
        }
        private global::System.String _strImageUrl;
        partial void OnstrImageUrlChanging(global::System.String value);
        partial void OnstrImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 intPhotoAlbumID
        {
            get
            {
                return _intPhotoAlbumID;
            }
            set
            {
                OnintPhotoAlbumIDChanging(value);
                ReportPropertyChanging("intPhotoAlbumID");
                _intPhotoAlbumID = StructuralObject.SetValidValue(value, "intPhotoAlbumID");
                ReportPropertyChanged("intPhotoAlbumID");
                OnintPhotoAlbumIDChanged();
            }
        }
        private global::System.Int32 _intPhotoAlbumID;
        partial void OnintPhotoAlbumIDChanging(global::System.Int32 value);
        partial void OnintPhotoAlbumIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PlanetWroxModel", "FK_TPictures_TPhotoAlbums", "TPhotoAlbum")]
        public TPhotoAlbum TPhotoAlbum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TPhotoAlbum>("PlanetWroxModel.FK_TPictures_TPhotoAlbums", "TPhotoAlbum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TPhotoAlbum>("PlanetWroxModel.FK_TPictures_TPhotoAlbums", "TPhotoAlbum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TPhotoAlbum> TPhotoAlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TPhotoAlbum>("PlanetWroxModel.FK_TPictures_TPhotoAlbums", "TPhotoAlbum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TPhotoAlbum>("PlanetWroxModel.FK_TPictures_TPhotoAlbums", "TPhotoAlbum", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlanetWroxModel", Name="TReview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TReview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TReview object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="strTitle">Initial value of the strTitle property.</param>
        /// <param name="strSummary">Initial value of the strSummary property.</param>
        /// <param name="intGenreID">Initial value of the intGenreID property.</param>
        /// <param name="blnAuthorized">Initial value of the blnAuthorized property.</param>
        /// <param name="dtmCreateDateTime">Initial value of the dtmCreateDateTime property.</param>
        /// <param name="dtmUpdateDateTime">Initial value of the dtmUpdateDateTime property.</param>
        public static TReview CreateTReview(global::System.Int32 id, global::System.String strTitle, global::System.String strSummary, global::System.Int32 intGenreID, global::System.Boolean blnAuthorized, global::System.DateTime dtmCreateDateTime, global::System.DateTime dtmUpdateDateTime)
        {
            TReview tReview = new TReview();
            tReview.ID = id;
            tReview.strTitle = strTitle;
            tReview.strSummary = strSummary;
            tReview.intGenreID = intGenreID;
            tReview.blnAuthorized = blnAuthorized;
            tReview.dtmCreateDateTime = dtmCreateDateTime;
            tReview.dtmUpdateDateTime = dtmUpdateDateTime;
            return tReview;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String strTitle
        {
            get
            {
                return _strTitle;
            }
            set
            {
                OnstrTitleChanging(value);
                ReportPropertyChanging("strTitle");
                _strTitle = StructuralObject.SetValidValue(value, false, "strTitle");
                ReportPropertyChanged("strTitle");
                OnstrTitleChanged();
            }
        }
        private global::System.String _strTitle;
        partial void OnstrTitleChanging(global::System.String value);
        partial void OnstrTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String strSummary
        {
            get
            {
                return _strSummary;
            }
            set
            {
                OnstrSummaryChanging(value);
                ReportPropertyChanging("strSummary");
                _strSummary = StructuralObject.SetValidValue(value, false, "strSummary");
                ReportPropertyChanged("strSummary");
                OnstrSummaryChanged();
            }
        }
        private global::System.String _strSummary;
        partial void OnstrSummaryChanging(global::System.String value);
        partial void OnstrSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String strBody
        {
            get
            {
                return _strBody;
            }
            set
            {
                OnstrBodyChanging(value);
                ReportPropertyChanging("strBody");
                _strBody = StructuralObject.SetValidValue(value, true, "strBody");
                ReportPropertyChanged("strBody");
                OnstrBodyChanged();
            }
        }
        private global::System.String _strBody;
        partial void OnstrBodyChanging(global::System.String value);
        partial void OnstrBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 intGenreID
        {
            get
            {
                return _intGenreID;
            }
            set
            {
                OnintGenreIDChanging(value);
                ReportPropertyChanging("intGenreID");
                _intGenreID = StructuralObject.SetValidValue(value, "intGenreID");
                ReportPropertyChanged("intGenreID");
                OnintGenreIDChanged();
            }
        }
        private global::System.Int32 _intGenreID;
        partial void OnintGenreIDChanging(global::System.Int32 value);
        partial void OnintGenreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean blnAuthorized
        {
            get
            {
                return _blnAuthorized;
            }
            set
            {
                OnblnAuthorizedChanging(value);
                ReportPropertyChanging("blnAuthorized");
                _blnAuthorized = StructuralObject.SetValidValue(value, "blnAuthorized");
                ReportPropertyChanged("blnAuthorized");
                OnblnAuthorizedChanged();
            }
        }
        private global::System.Boolean _blnAuthorized;
        partial void OnblnAuthorizedChanging(global::System.Boolean value);
        partial void OnblnAuthorizedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dtmCreateDateTime
        {
            get
            {
                return _dtmCreateDateTime;
            }
            set
            {
                OndtmCreateDateTimeChanging(value);
                ReportPropertyChanging("dtmCreateDateTime");
                _dtmCreateDateTime = StructuralObject.SetValidValue(value, "dtmCreateDateTime");
                ReportPropertyChanged("dtmCreateDateTime");
                OndtmCreateDateTimeChanged();
            }
        }
        private global::System.DateTime _dtmCreateDateTime;
        partial void OndtmCreateDateTimeChanging(global::System.DateTime value);
        partial void OndtmCreateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dtmUpdateDateTime
        {
            get
            {
                return _dtmUpdateDateTime;
            }
            set
            {
                OndtmUpdateDateTimeChanging(value);
                ReportPropertyChanging("dtmUpdateDateTime");
                _dtmUpdateDateTime = StructuralObject.SetValidValue(value, "dtmUpdateDateTime");
                ReportPropertyChanged("dtmUpdateDateTime");
                OndtmUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _dtmUpdateDateTime;
        partial void OndtmUpdateDateTimeChanging(global::System.DateTime value);
        partial void OndtmUpdateDateTimeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PlanetWroxModel", "FK_TReviews_TGenres", "TGenres")]
        public TGenre TGenre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TGenre>("PlanetWroxModel.FK_TReviews_TGenres", "TGenres").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TGenre>("PlanetWroxModel.FK_TReviews_TGenres", "TGenres").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TGenre> TGenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TGenre>("PlanetWroxModel.FK_TReviews_TGenres", "TGenres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TGenre>("PlanetWroxModel.FK_TReviews_TGenres", "TGenres", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
